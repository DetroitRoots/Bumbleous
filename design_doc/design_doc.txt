Date: 02.14.2022

 Public Statement: 

-  I will need lots of investigation and studies to be able to add the other features, this is my first AI project. 
 - Doing this whole project alone along with my other projects will take time and dedication.
 - It will be helpful for me to be better at coding and give me (and other participants if there will ever be) enough knowledge for more complex and more exciting projects.
 - Mindset: Better to start and learn doing from mistakes than waiting the right time to start without doing it. 
 - If the project gets a successfull process, hopefully we will be able to see AI controlled cars in the traffic according to any budget and family.
 - Each part of this software will be open source forever.
---------------
 Credits:

- Inspiration & Encouragement and help for the Tracking Code: 
- Clever Programmer Team (https://www.cleverprogrammer.com | Github: https://github.com/CleverProgrammers | qazi@cleverprogrammer.com )
- Special thanks to Aaron Bernath from CP team.

---------------- 

 Disclaimer: This is an experimental project and it is open to be developed with the help of volunteered contrubuters. 

Project Name: 
Bumbleous


Team: 

Tech Lead: ?
Authors: Goktug Erol (https://www.github.com/Cyber9unk | https://cyber9unk.weebly.com )
Reviewers: Goktug Erol (https://www.github.com/Cyber9unk ||https://cyber9unk.weebly.com |)
UI : Goktug Erol (https://www.github.com/Cyber9unk | https://cyber9unk.weebly.com | )

Communication and Project Management:

- If I can gather a team of volunteers, the communications will be managed via Slack.
- Google Workspace and Google Calendar.


Timeline:

15.02.2022 - 25.02.2022 = Milestone / AI Tracking Code Ready
25.02..2022 - ? =  Tests 

Current and proposal solutions: 
- AI Tracking Technology as the first phase of the project.

--------------------------------------------------------------
Programming Languages
(More languages can be added as the project develops.)

- Python Anaconda 3.9.7

Libraries

- More libraries will be added and this list will be updated as the project develops.

1) OpenCV
OpenCV stands for “Open Source Computer Vision” is a library for computer vision and machine learning software library invented by Intel in 1999. 
OpenCV has C++, Python, Java and MATLAB interfaces and supports Windows, 
Linux, Android, and Mac OS. OpenCV has been written natively in C++ and has a templated interface that works seamlessly with STL containers. <h>

2)

3)

--------------------------------------------------------------


Functional Description: 
- This artificial inteligence will help people when driving in bad weather conditions safely, when the weather conditions are dangerous.
- It will help to save time and energy and it will require human driver to have less job to do therefore the driver will be aware for the environment more.
- It will provoke the use of AI controlled technologies.  
-It can be installed to any vehicle with some upgrades.No need to buy a brand new car that is sold as self-driving vehicle.
- This AI is just a beginning. The main idea is to connect this system into a computer that is connected to parts of the vehicle, therefore even if you have a 95 model car, you can just connect a specific computer with the AI installed.
when it's connected you will have autopilot in your car that probably doesn't even have a bluetouth or a music player.
- This will prove that self driving cars and AI technology is accessible to more people, and it's not depending on someoone's economical status.
- It may require some modifications depends on each vehicles specifications and design, configuration flexibility must be included in the development of the AI.


 Components and Requirements
 
 
 Zone Tracker
 
 
 - I will be developing a computer vision technology that will scan all the objects surrounding the car for safe travel and safety of the elements around the car.
 - Therefore the vehicle will be able to detect and tell the driver (and to future core ai system) the targets in the traffic (cars, pedestrians, other obstacles)
 - To do this, I need to introduce these objects to the machine with some graphics and real photos.
 - Photos are taken from Google Earth and Google search results. Black and White photos recognized by the AI easier than colorful photos.
 - This is a simple proccess, similar technology is used for parking sensors and new cars that already have cameras and doing the exact same thing.
 - Algorithm is based on contrast graphics. All the algorithm details will be shared here when ready. 


 --
 
 What comes next?
 - The Tracking AI needs to be tested once it's done.
 - Development of the AI to the point where it can be optimized to automatically drive safely any vehicle with minimum modifications.
 - Development of the computer that can run this AI and connected to a car at the same time with mechanical and electronical components.
 - Development of an operating System or adapting an existing operating system if possible.
 - Any Car/Vehicle optimization can be done part by part and probably it will be like that since all vehicles have different specs and design factors that affects to the driving style.

 
